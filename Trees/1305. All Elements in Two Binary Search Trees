/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> getAllElements(TreeNode root1, TreeNode root2) {
         List<Integer> lst = new ArrayList<>();
        
        //Iterative
        Stack<TreeNode> stk1 = new Stack<>();
        Stack<TreeNode> stk2 = new Stack<>();
        while(root1 != null || root2 != null || !stk1.isEmpty() || !stk2.isEmpty()){
            while(root1!=null){
                stk1.add(root1);
                root1 = root1.left;
            }
            while(root2!=null){
                stk2.add(root2);
                root2 = root2.left;
            }
            if(stk2.isEmpty() || !stk1.isEmpty() && stk1.peek().val <= stk2.peek().val){
                root1 = stk1.pop();
                lst.add(root1.val);
                root1 = root1.right;
            }
            else{
                root2 = stk2.pop();
                lst.add(root2.val);
                root2 = root2.right;
            }
        }
        return lst;
    }
}
