class Solution {
    public List<List<String>> groupAnagrams(String[] strs) {
        /*Map<String,List<String>> sortedKeys = new HashMap<String,List<String>>();
        List<List<String>> result = new ArrayList<List<String>>();
        for(String str:strs){
            String sortedStringKey = SortString(str);
            if(!sortedKeys.containsKey(sortedStringKey)){
                sortedKeys.put(sortedStringKey, new ArrayList<String>());
            }
            sortedKeys.get(sortedStringKey).add(str);
        }
        for(String str:sortedKeys.keySet()){
            result.add(sortedKeys.get(str));
        }
        return result;
    }
    
     // Method to sort a string alphabetically 
    public String SortString(String inputString) 
    { 
        // convert input string to char array 
        char tempArray[] = inputString.toCharArray(); 
          
        // sort tempArray 
        Arrays.sort(tempArray); 
          
        // return new sorted string 
        return new String(tempArray); 
    }*/

   int[] prime = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103};
    
            List<List<String>> res = new ArrayList<>();
            Map<Integer, Integer> map = new HashMap<>();
            for (String s : strs) {
                int key = 1;
                for (char c : s.toCharArray()) {
                    key *= prime[c - 'a'];
                }
                List<String> t;
                if (map.containsKey(key)) {
                    t = res.get(map.get(key));
                } else {
                    t = new ArrayList<>();
                    res.add(t);
                    map.put(key, res.size() - 1);
                }
                t.add(s);
            }
            return res;
    }
}
