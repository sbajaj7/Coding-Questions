/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int max;
    public int maxPathSum(TreeNode root) {
        
        max = Integer.MIN_VALUE;
        pathSumHelper(root);
        return max;
    }
    public int pathSumHelper(TreeNode node){
        
        if(node == null)
            return 0;
             
        int left = Math.max(0,pathSumHelper(node.left));
        int right = Math.max(0,pathSumHelper(node.right));
        
        int sum = left + node.val + right;
        max = Math.max(max,sum);
        return Math.max(left,right) + node.val;
    }
}
