class Solution {
    public int numIslands(char[][] grid) {
        if(grid == null || grid.length == 0)
            return 0;
        int row = grid.length;
        int col = grid[0].length;
        
        int numIsland = 0;
        
        for(int i=0;i<row;i++){
            for(int j = 0;j<col;j++){
                if(grid[i][j] == '1'){
                    DFSMarking(grid,i,j);
                    ++numIsland;
                }
            }
        }
        return numIsland;
    }
        
    public void DFSMarking(char grid[][], int i, int j){
        if(i<0||j<0||i>=grid.length||j>=grid[0].length||grid[i][j]!='1')
            return;

        grid[i][j] = '0';
        DFSMarking(grid,i+1,j);
        DFSMarking(grid,i-1,j);
        DFSMarking(grid,i,j+1);
        DFSMarking(grid,i,j-1);
    }
}
