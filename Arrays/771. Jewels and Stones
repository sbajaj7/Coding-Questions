class Solution {
    public int numJewelsInStones(String J, String S) {
        
        int numJewels = 0;
//M-1 (This is slow because we are looping through all the jewels that we might now have)
//         Map<Character,Integer> freq = new HashMap<>();
//         for(char c: S.toCharArray())
//             freq.put(c,freq.getOrDefault(c,0)+ 1);
        
//         for(char c:J.toCharArray())
//             numJewels += freq.getOrDefault(c,0);
        
//M-2 Fastest 100%
        for(char c: S.toCharArray())
            if(J.indexOf(c) >= 0)
                numJewels++;
        
        return numJewels;

//M-3 
//Replace all characters in S which are not in J with empty character and then return the length of the string
//return S.replaceAll("[^" + J + "]","").length();  
    }
}
