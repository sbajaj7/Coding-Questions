class Solution {
    public int singleNumber(int[] nums) {
        
// Method - 1 This solution has time complexity O(nlog n) because of sortin and space complexity is O(1).
//         if(nums.length == 1)
//             return nums[0];
        
//         Arrays.sort(nums);
        
//         for(int i = 0;i<nums.length;i=i+2){
//             if(i == nums.length-1)
//                 return nums[i];
            
//             if(nums[i] != nums[i+1])
//                 return nums[i];
//         }
//         return -1;
        
// Method - 2 Bitwise manipulation
        int a = 0;
        for(int num: nums)
            a ^= num;
        
        return a;
    }
}
