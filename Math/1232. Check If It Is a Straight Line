class Solution {
    public boolean checkStraightLine(int[][] coordinates) {
        
        /* M-1 Manually handling the case when slope is undefined
        float slope = 0F;
        boolean isVertical = false;
        for(int i=1;i<coordinates.length;i++){
            if(i==1){
                if((coordinates[1][0] - coordinates[0][0]) != 0)
                    slope = (coordinates[1][1] - coordinates[0][1])/(coordinates[1][0] - coordinates[0][0]);
                else
                    isVertical = true;
            }
            else{
                if(!isVertical){
                float curSlope = ((float)(coordinates[i][1] - coordinates[0][1])/(coordinates[i][0] - coordinates[0][0]));
                if(slope != curSlope)
                    return false;
                } else if((coordinates[i][0] - coordinates[0][0]) != 0)
                    return false;
            }
        }
        return true;*/
        
        //M-2 Using multiplication to avoid the case when slope if undefined
        int x0 = coordinates[0][0];
        int y0 = coordinates[0][1];
        int x1 = coordinates[1][0];
        int y1 = coordinates[1][1];
        
        int deltaX = x1-x0;
        int deltaY = y1-y0;
        
        for(int point[] : coordinates){
            int x = point[0];
            int y = point[1];
            if((y-y0) * deltaX != (x-x0) * deltaY)
                return false;
        }
        return true;
    }
}
