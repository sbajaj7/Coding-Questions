/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<String> paths;
    public int sumRootToLeaf(TreeNode root) {
        
        paths = new ArrayList<>();
        sumRootToLeafHelper(root,"");
        int sum = 0;
        for(String path: paths){
            sum += Integer.parseInt(path,2);
        }
        return sum;
    }
    private void sumRootToLeafHelper(TreeNode root, String path){
        if(root == null)
            return;
        
        path += root.val;
        if(root.left == null && root.right == null){
            paths.add(path);
            return;
        }
        
        sumRootToLeafHelper(root.left,path);
        sumRootToLeafHelper(root.right,path);
    }
}
