/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode middleNode(ListNode head) {
        if(head == null)
            return null;
        
        //M-1 O(N + M)
        /*ListNode cur = head;
        int nodeCount = 1;
        while(cur.next != null){
            nodeCount++;
            cur = cur.next;
        }
        int middleElementPos = (nodeCount/2) + 1;
        cur = head;
        for(int i=1;i<middleElementPos;i++){
            cur = cur.next;
        }
        return cur;*/
        
        //M-2 O(N)
        ListNode slow = head, fast = head;
        
        while(fast != null && fast.next != null){
            slow = slow.next;
            fast = fast.next.next;
        }
        return slow;
    }
}
